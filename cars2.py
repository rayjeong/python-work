i#!/usr/bin/env python3

import json
import locale
import sys

import os
import emails
import reports


def load_data(filename):
  """Loads the contents of filename as a JSON file."""
  with open(filename) as json_file:
    data = json.load(json_file)
  return data


def format_car(car):
  """Given a car dictionary, returns a nicely formatted name."""
  return "{} {} ({})".format(
      car["car_make"], car["car_model"], car["car_year"])


def process_data(data):
  """Analyzes the data, looking for maximums.

  Returns a list of lines that summarize the information.
  """
  max_revenue = {"revenue": 0}
  max_sales = {"sales": 0}
  max_sales_peryear = {"total": 0}
  year = ""


  for item in data:
    # Calculate the revenue generated by this model (price * total_sales)
    # We need to convert the price from "$1234.56" to 1234.56
    item_price = locale.atof(item["price"].strip("$"))
    item_revenue = item["total_sales"] * item_price
    if item_revenue > max_revenue["revenue"]:
      item["revenue"] = item_revenue
      max_revenue = item
    # TODO: also handle max sales
    if item["total_sales"] >  max_sales["sales"]:
      max_sales["sales"] =  item["total_sales"]
      car_with_most_sales = item

    # TODO: also handle most popular car_year
    year = item["car"]["car_year"]
    if year not in max_sales_peryear.keys():
        max_sales_peryear[year] = 0
    max_sales_peryear[year] = max_sales_peryear[year] + item["total_sales"]
    if max_sales_peryear[year] > max_sales_peryear["total"]:
        max_sales_peryear["total"] = max_sales_peryear[year]
        top_year = year


  summary = [
    "The {} generated the most revenue: ${}".format(
      format_car(max_revenue["car"]), max_revenue["revenue"]),

    "The {} had the most sales: {}".format( 
       format_car(car_with_most_sales["car"]), car_with_most_sales["total_sales"]), 

    "The most popular year was {} with {} sales.".format(
       top_year, int(max_sales_peryear[top_year])), 
  ]

  return summary



def cars_dict_to_table(car_data):
  """Turns the data in car_data into a list of lists."""
  table_data = [["ID", "Car", "Price", "Total Sales"]]
  for item in car_data:
    table_data.append([item["id"], format_car(item["car"]), item["price"], item["total_sales"]])
  return table_data


def main(argv):
  """Process the JSON data and generate a full report out of it."""
  data = load_data("car_sales.json")
  summary = process_data(data)
  table_data = cars_dict_to_table(data)
  print(summary)

  body = ""
  for line in summary:
     body = body + '\r' + line  

  # TODO: turn this into a PDF report
  reports.generate("/tmp/cars.pdf", "Sales summary for last month", body, table_data)

  # TODO: send the PDF report as an email attachment
  sender = "automation@example.com"
  receiver = "{}@example.com".format(os.environ.get('USER'))
  subject = "Sales summary for last month"

  message = emails.generate(sender, receiver, subject, body, "/tmp/cars.pdf")
  emails.send(message)

if __name__ == "__main__":
  main(sys.argv)

